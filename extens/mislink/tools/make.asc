1 rem> It's a good idea to save this as
2 rem> a .CMP file file you've got the
3 rem> Compiler...
10 key off : hide : curs off : click off : mode 0 : update off 
11 dim WID(256),HIG(256),LE(256),IM(256),JIM(256)
12 comptest always : rem> Remove this if you've no Compiler <
14 IM(1)=-1 : WID(1)=-1
15 palette $0,$777,$770
16 reserve as screen 14
17 LDD=false : MAK=false : SAV=false
20 restore 180
30 read M$ : MC=1
40 repeat 
50 menu$ (MC)=M$,0,1
60 read M2$,FLAG : MC2=1
70 repeat 
80 menu$ (MC,MC2)=M2$,0,2
90 if not(FLAG) then menu$ (MC,MC2) off 
100 read M2$,FLAG : inc MC2
110 until M2$="QQQ"
120 read M$ : inc MC
130 until M$="QQQ"
140 show on : pen 1 : menu on 4,1 : curs off 
141 palette $0,$777,$770 : wait vbl 
142 on menu goto 500,600,700,800
143 on menu on 
144 T=T/1 : goto 144
150 rem
160 rem
170 rem
180 data " DESK   "
190 data "ABOUT...",-1
200 data "INFO....",-1
210 data "QUIT....",-1
220 data "QQQ",0
230 data " MAKE     "
240 data "PICTURE...",-1
250 data "BOBS......",-1
260 data "JOEYS.....",-1
270 data "W.BLOCKS..",-1
280 data "L.BLOCKS..",-1
290 data "empty.....",0
300 data "TILES.....",-1
305 data "DIGIBANK..",-1
310 data "QQQ",0
320 data " LOAD     "
330 data "PICTURE...",0
340 data "SPRITES...",-1
350 data "MAP.DATA..",0
360 data "QQQ",0
370 data " SAVE     "
380 data "PICTURE...",-1
390 data "BOBS......",-1
400 data "JOEYS.....",-1
410 data "W.BLOCKS..",-1
420 data "L.BLOCKS..",-1
430 data "MAP.DATA..",0
440 data "TILES.....",-1
450 data "QQQ",0
460 data "QQQ"
470 end 
475 rem>
476 rem> DESK <
477 rem
500 on mnselect goto 1000,1100,1200
575 rem>
576 rem> MAKE <
577 rem
600 on mnselect goto 2000,2500,3000,3500,4500,4000,5000,5500
675 rem>
676 rem> LOAD <
677 rem
700 on mnselect goto 1500,1600,1700
775 rem>
776 rem> SAVE <
777 rem
800 on mnselect goto 8000,8100,8200,8300,8400,8500,8600
997 rem
998 rem> ..ABOUT.. <
999 rem
1000 menu freeze : windopen 1,0,4,40,16,8,1
1020 title " ABOUT "
1025 pen 2
1030 curs off : home 
1040 print : centre "The Missing Link Convertor"
1050 print : centre "(C) 1993. Top Notch Software"
1060 print : print : centre "This program will convert to and from"
1070 print : centre "the various file formats required"
1080 print : centre "by The Missing Link."
1090 print : print : centre "Remember - The Missing Link is"
1092 print : centre "SHAREWARE!"
1093 print : print : print : centre "Press any key or mousebutton"
1094 repeat : until inkey$<>"" or mouse key<>0
1095 windel 1 : goto 140
1097 rem
1098 rem> ..INFO.. <
1099 rem
1100 menu freeze : windopen 1,0,3,40,18,8,1
1105 title " INFO "
1106 pen 2
1110 curs off : home 
1120 print : centre "The Missing Link is a SHAREWARE"
1130 print : centre "extension for STOS.  I can only assume"
1140 centre "that you already know what it does"
1150 print : centre "and how to register, but just in"
1160 print : centre "you are using an unregistered version"
1170 print : centre "you can register by sending œ10 to:"
1174 print : print : centre "Colin Watt,        Billy Allan,     "
1176 print : centre "14 Lanrig Place,   66 Highmains Ave,"
1178 print : centre "Muirhead,          Dumbarton,       "
1180 print : centre "Scotland.          Scotland.        "
1181 print : centre "G69 9AT.           G82 2PT.         "
1182 print : print : centre "Press any key or mousebutton"
1184 repeat : until inkey$<>"" or mouse key<>0
1186 windel 1 : goto 140
1197 rem
1198 rem> ..QUIT.. <
1199 rem
1200 default : end 
1497 rem
1498 rem> ..LOAD PICTURE.. <
1499 rem
1500 menu freeze : F$=file select$("*.*","Load a picture (NEO,PI1,PC1,MBK)",8)
1510 if F$="" then goto 140
1520 G$=dir first$(F$,-1)
1530 if G$="" then boom : goto 1500
1540 G$=right$(F$,3)
1545 if G$<>"NEO" and G$<>"PI1" and G$<>"PC1" and G$<>"MBK" then boom : goto 1500
1550 hide on : if G$="PC1" then bload F$,back : copy back+2,back+34 to start(14)+32000 : display pc1 back,start(14) : goto 1595
1555 if G$="MBK" then load F$,5 : if leek(start(5))<>$6071963 then boom : erase 5 : goto 1500 : else unpack 5,14 : erase 5 : goto 1595
1560 load F$,14
1595 wipe back : LDD=true : goto 140
1597 rem
1598 rem> ..LOAD SPRITES.. <
1599 rem
1600 menu freeze : F$=file select$("*.MBK","Load some sprites",8)
1610 if F$="" then goto 140
1620 G$=dir first$(F$,-1)
1630 if G$="" then boom : goto 1600
1640 if right$(F$,3)<>"MBK" then boom : goto 1600
1650 load F$,1 : if leek(start(1))<>$19861987 then boom : erase 1 : goto 1600
1660 LDD=true : goto 140
1697 rem
1698 rem> ..LOAD MAP DATA.. <
1699 rem
1700 menu freeze : F$=file select$("*.TNM","Load some map data",8)
1710 if F$="" then goto 140
1720 G$=dir first$(F$,-1)
1730 if G$="" then boom : goto 1700
1740 if right$(F$,3)<>"TNM" then boom : goto 1700
1750 open in #1,F$ : L=lof(#1) : close #1
1760 erase 8 : reserve as work 8,L : bload F$,8
1770 LDD=true : goto 140
1997 rem
1998 rem> .. MAKE PICTURE .. <
1999 rem
2000 menu off : if length(1)=0 then boom : wait 15 : goto 20
2010 NS=deek(start(1)+16)
2015 wipe start(14) : X=0 : Y=0 : hide on 
2020 for T=1 to min(NS,240) : sprite 1,X,Y,T : update 
2030 screen copy physic,X,Y,X+16,Y+16 to 14,X,Y
2040 X=X+16 : if X>304 then X=0 : Y=Y+16
2045 next T
2050 A=palt(start(1)) : copy A,A+32 to start(14)+32000
2052 screen copy 14 to physic : repeat : until inkey$<>"" or mouse key>0 : wipe physic
2060 goto 20
2497 rem
2498 rem> .. MAKE BOBS .. <
2499 rem
2500 rem
2505 menu off : if length(1)>0 then NS=deek(start(1)+16) : else boom : wait 15 : goto 20
2515 remcurs off : click off : key off : mode 0
2520 palette 0,$770
2525 if IM(1)=-1 then for N=1 to 256 : IM(N)=16 : JIM(N)=4 : next N
2530 goto 2715
2535 hide on : if length(1)=0 then goto 2910
2540 NS=deek(start(1)+16)
2545 for N=1 to NS : ZZ=(start(1)+26+((N-1)*8)) : WID(N)=peek(ZZ)*16 : HIG(N)=peek(ZZ+1)
2550 next N
2555 LE=38+(4*NS) : for N=1 to NS
2560 STLE=12*HIG(N) : IMLE=((WID(N)/16)+1)*STLE : SPLE=((IMLE*IM(N))+10)-STLE
2565 LE(N)=SPLE : LE=LE+SPLE : next N
2570 erase 5 : reserve as data 5,LE
2575 loke start(5),$38964820
2580 doke start(5)+4,NS
2585 C=palt(start(1)) : copy C,C+32 to start(5)+6
2590 AD=38+(4*NS) : CO=38 : for N=1 to NS
2595 loke start(5)+CO,AD : AD=AD+LE(N) : CO=CO+4 : next N
2600 SN=1 : for N=1 to NS
2605 XI=(16/IM(N))
2610 STLE=12*HIG(N)
2615 IMLE=((WID(N)/16)+1)*STLE
2620 doke start(5)+CO,WID(N) : CO=CO+2
2625 doke start(5)+CO,HIG(N) : CO=CO+2
2630 doke start(5)+CO,JIM(N) : CO=CO+2
2635 doke start(5)+CO,IMLE : CO=CO+2
2640 doke start(5)+CO,STLE : CO=CO+2
2645 for O=0 to 15 step XI
2650 sprite 1,O,0,SN : update 
2655 TWID=WID(N) : if O=0 then TWID=TWID-16
2660 for X=0 to (TWID/2) step 8
2665 for Y=0 to HIG(N)-1 : T=(Y*160)+X
2670 A1=deek(physic+T) : A2=deek(physic+T+2)
2675 A3=deek(physic+T+4) : A4=deek(physic+T+6) : A=A1 or A2 or A3 or A4 : A=not(A) : doke physic+T+80,A : doke physic+T+82,A : A=leek(physic+T+80)
2680 loke start(5)+CO,A : CO=CO+4 : copy physic+T,physic+T+8 to start(5)+CO : CO=CO+8
2685 next Y : next X
2690 next O : inc SN : next N
2695 sprite off : update 
2700 rem **
2705 rem **  Menu
2710 rem **
2715 windopen 1,0,0,20,10,0,3 : curs off : show on 
2720 home : print 
2725 print 
2730 print "Make BOB data"
2735 print "images"
2740 print "quit"
2745 repeat : wait vbl 
2750 Y=y mouse/16 : M=mouse key : until M<>0
2755 inc Y : on Y goto 2765,2765,2790,2820,2905
2760 goto 2720
2765 goto 2745
2780 NS=deek(start(1)+16)
2785 goto 2715
2790 windel 1 : goto 2535
2795 goto 2745
2820 if length(1)=0 then windel 1 : goto 2910
2825 A=palt(start(1))
2830 I=1 : clw : locate 0,4 : print "images"
2835 print "sprite"
2840 print "copy to ALL"
2845 print "end"
2850 locate 6,4 : print IM(I);" " : sprite 1,0,0,I : update 
2855 locate 6,5 : print I;" "
2860 repeat : M=mouse key : Y=y mouse/16 : until M<>0 and Y>=4 and Y<=7
2865 if Y=4 and M=1 then if IM(I)>1 then IM(I)=IM(I)/2 : dec JIM(I)
2870 if Y=4 and M=2 then if IM(I)<16 then IM(I)=IM(I)*2 : inc JIM(I)
2875 if Y=5 and M=1 then if I>1 then dec I
2880 if Y=5 and M=2 then if I<NS then inc I
2885 if Y=6 and M=3 then TI=IM(I) : TJ=JIM(I) : for N=1 to NS : IM(N)=TI : JIM(N)=TJ : doke $FFFF8240,$700 : doke $FFFF8240,0 : next N
2890 if Y=7 then clw : sprite off : update : goto 2720
2895 for N=1 to 4 : wait vbl : next N
2900 goto 2850
2905 goto 20
2910 wait vbl : boom : doke $FFFF8240,$700 : wait vbl : doke $FFFF8240,0 : goto 2715
2977 rem
2978 rem> .. MAKE JOEY .. <
2979 rem
3000 rem ** This prorgam makes up the data for `joey` one plane sprites
3005 rem ** for use with The Missing Link part 2
3010 rem **
3015 menu off : if length(1)>0 then NS=deek(start(1)+16) : else boom : wait 15 : goto 20
3025 if IM(1)=-1 then for N=1 to 256 : IM(N)=16 : JIM(N)=4 : next N
3030 goto 3220
3035 if length(1)=0 then goto 3375
3040 hide on : NS=deek(start(1)+16)
3045 for N=1 to NS : ZZ=(start(1)+26+((N-1)*8)) : WID(N)=peek(ZZ)*16 : HIG(N)=peek(ZZ+1)
3050 next N
3055 LE=38+(4*NS) : for N=1 to NS
3060 STLE=4*HIG(N) : IMLE=((WID(N)/16)+1)*STLE : SPLE=((IMLE*IM(N))+10)-STLE
3065 LE(N)=SPLE : LE=LE+SPLE : next N
3070 erase 5 : reserve as data 5,LE
3075 loke start(5),$38964820
3080 doke start(5)+4,NS
3085 C=palt(start(1)) : copy C,C+32 to start(5)+6
3090 AD=38+(4*NS) : CO=38 : for N=1 to NS
3095 loke start(5)+CO,AD : AD=AD+LE(N) : CO=CO+4 : next N
3100 SN=1 : for N=1 to NS
3105 XI=(16/IM(N))
3110 STLE=4*HIG(N)
3115 IMLE=((WID(N)/16)+1)*STLE
3120 doke start(5)+CO,WID(N) : CO=CO+2
3125 doke start(5)+CO,HIG(N) : CO=CO+2
3130 doke start(5)+CO,JIM(N) : CO=CO+2
3135 doke start(5)+CO,IMLE : CO=CO+2
3140 doke start(5)+CO,STLE : CO=CO+2
3145 for O=0 to 15 step XI
3150 sprite 1,O,0,SN : update 
3155 TWID=WID(N) : if O=0 then TWID=TWID-16
3160 for X=0 to (TWID/2) step 8
3165 for Y=0 to HIG(N)-1 : T=(Y*160)+X
3170 A1=deek(physic+T) : A2=deek(physic+T+2)
3175 A3=deek(physic+T+4) : A4=deek(physic+T+6) : A=A1 or A2 or A3 or A4
3180 doke physic+T+80,A : doke physic+T+82,A : A=leek(physic+T+80)
3185 loke start(5)+CO,A : CO=CO+4
3190 next Y : next X
3195 next O : inc SN : next N
3200 sprite off : update 
3205 rem **
3210 rem **  Menu
3215 rem **
3220 show on : windopen 1,0,0,20,10,0,3 : curs off 
3225 home : print 
3230 print "Make JOEY data"
3235 print 
3240 print "images"
3245 print "quit"
3250 repeat : wait vbl 
3255 Y=y mouse/16 : M=mouse key : until M<>0
3260 inc Y : on Y goto 3270,3275,3280,3285,3370
3265 goto 3225
3270 goto 3250
3275 windel 1 : goto 3035
3280 goto 3250
3285 if length(1)=0 then windel 1 : goto 3375
3290 A=palt(start(1))
3295 I=1 : clw : locate 0,4 : print "images"
3300 print "sprite"
3305 print "copy to ALL"
3310 print "end"
3315 locate 6,4 : print IM(I);" " : sprite 1,0,0,I : update 
3320 locate 6,5 : print I;" "
3325 repeat : M=mouse key : Y=y mouse/16 : until M<>0 and Y>=4 and Y<=7
3330 if Y=4 and M=1 then if IM(I)>1 then IM(I)=IM(I)/2 : dec JIM(I)
3335 if Y=4 and M=2 then if IM(I)<16 then IM(I)=IM(I)*2 : inc JIM(I)
3340 if Y=5 and M=1 then if I>1 then dec I
3345 if Y=5 and M=2 then if I<NS then inc I
3350 if Y=6 and M=3 then TI=IM(I) : TJ=JIM(I) : for N=1 to NS : IM(N)=TI : JIM(N)=TJ : doke $FFFF8240,$700 : doke $FFFF8240,0 : next N
3355 if Y=7 then clw : sprite off : update : goto 3225
3360 for N=1 to 4 : wait vbl : next N
3365 goto 3315
3370 windel 1 : goto 20
3375 wait vbl : boom : doke $FFFF8240,$700 : wait vbl : doke $FFFF8240,0 : goto 3220
3497 rem
3498 rem> .. MAKE BLOCKS .. <
3499 rem
3500 rem ** this program makes the blocks for the bi-directional map command
3505 menu off : curs off : if length(1)=0 then boom : wait 15 : goto 20
3510 IM=16 : SHIM=4
3515 goto 3620
3520 windel 1 : A=length(1) : if A=0 then gosub 3715 : goto 3620
3525 IMS=16/IM
3530 AM=deek(start(1)+16) : LE=AM*256*IM
3535 if LE>free-5000 then gosub 3715 : goto 3620
3540 erase 5 : reserve as data 5,LE+40
3545 loke start(5),$7793868
3550 doke start(5)+4,SHIM
3555 doke start(5)+6,(AM*256)
3560 wait vbl : A=palt(start(1)) : copy A,A+32 to start(5)+8
3565 rem **
3570 rem ** make blocks
3575 CO=40 : hide on 
3580 for X=16 to IMS step-IMS : for N=1 to AM
3585 sprite 1,X,0,N : update 
3590 for TX=0 to 8 step 8 : for Y=0 to 15 : T=Y*160 : copy (logic+T+TX),(logic+T+TX+8) to start(5)+CO
3595 CO=CO+8 : next Y : next TX : next N : next X
3600 sprite off : update : show on 
3605 rem **
3610 rem **
3615 rem ** MENU
3620 rempalette 0,$733 : get palette (logic)
3625 windopen 1,0,0,20,10,0,3 : curs off 
3630 home : print 
3635 print "make blocks"
3640 print 
3645 print "images"
3650 print "quit"
3655 locate 10,3 : print IM
3660 repeat : wait vbl : M=mouse key : Y=(y mouse/16)+1
3665 until M<>0
3670 on Y goto 3680,3520,3685,3690
3675 windel 1 : goto 20
3680 goto 3660
3685 goto 3660
3690 if M=1 and IM>1 then IM=IM/2 : dec SHIM : for N=0 to 3 : wait vbl : next N
3695 if M=2 and IM<16 then IM=IM*2 : inc SHIM : for N=0 to 3 : wait vbl : next N
3700 locate 10,3 : print IM;" "
3705 goto 3660
3710 rem ** err
3715 A=deek($FFFF8240) : wait vbl : doke $FFFF8240,$700 : boom : for N=0 to 10 : wait vbl : next N : doke $FFFF8240,A : 
3720 return 
4000 end 
4497 rem
4498 rem> .. MAKE LANDSCAPE BLOCKS .. <
4499 rem
4500 rem ** this program makes the blocks for the vertical map command
4505 menu off : curs off : if length(1)=0 then boom : wait 15 : goto 20
4510 DMM=2000
4515 goto 4615
4520 windel 1 : A=length(1) : if A=0 then gosub 4730 : goto 4615
4525 AM=deek(start(1)+16) : LE=AM*128 : hide on 
4530 if LE>free-5000 then gosub 4730 : goto 4615
4535 erase 5 : reserve as data 5,LE+40 : D=palt(start(1))
4540 loke start(5),417793868
4545 doke start(5)+4,IM
4550 doke start(5)+6,(AM*256)
4555 wait vbl : A=palt(start(1)) : kopy A,start(5)+8,32
4560 rem **
4565 rem ** make blocks
4570 CO=40 : hide on 
4575 for N=1 to AM
4580 sprite 1,X,0,N : update 
4585 for Y=0 to 15 : T=Y*160 : kopy (logic+T),start(5)+CO,8
4590 CO=CO+8 : next Y : next N
4595 sprite off : update : show on 
4600 rem **
4605 rem **
4610 rem ** MENU
4615 palette 0,$733 : get palette (logic)
4620 windopen 1,0,0,20,10,0,3 : curs off : show on 
4625 home : print 
4630 print 
4635 print "make blocks"
4640 print "quit"
4645 repeat : wait vbl : M=mouse key : Y=(y mouse/16)+1
4650 until M<>0
4655 on Y goto 4665,4665,4520
4660 windel 1 : goto 20
4665 goto 4645
4685 goto 4615
4720 goto 4645
4725 rem ** err
4730 A=deek($FFFF8240) : wait vbl : doke $FFFF8240,$700 : boom : for N=0 to 10 : wait vbl : next N : doke $FFFF8240,A : 
4735 return 
4997 rem
4998 rem> .. MAKE TILES .. <
4999 rem
5000 menu off : if length(1)=0 then boom : wait 15 : goto 20
5010 home : centre "Sprite to Tile convertor"
5020 locate 0,23 : centre "16x16 sprites only!"
5070 AM=deek(start(1)+16)
5080 LE=((256*16)*AM)+38
5090 erase 5 : reserve as data 5,LE
5100 loke start(5),4005991 : doke start(5)+4,AM-1
5110 A=palt(start(1)) : kopy A,start(5)+6,32
5120 hide on 
5130 CO=38 : for N=1 to AM : for X=0 to 15
5140 sprite 1,X,0,N : sprite 2,X,16,N
5150 sprite 3,X-16,0,N : sprite 4,X-16,16,N : update 
5160 for Y=0 to 31 : T=Y*160 : kopy logic+T,start(5)+CO,8 : CO=CO+8 : next Y
5170 next X : next N
5180 goto 20
5497 rem
5498 rem> .. make digibank .. <
5499 rem
5500 menu off : curs off 
5540 palette $0,$556
5550 rem
5560 MXSAM=50
5570 rem
5580 reserve as work 9,18
5590 T$="Lionpoubnk"
5600 copy varptr(T$),varptr(T$)+10 to start(9)
5610 loke start(9)+10,10 : loke start(9)+14,0
5620 F=free-8000
5630 erase 5 : erase 10 : reserve as work 10,F
5640 fill start(10) to start(10)+MXSAM*8+6,0
5650 loke start(10),140032193
5660 NS=-1 : H=(8*MXSAM)+6
5670 CS=0 : FR=10
5680 windopen 1,0,0,20,12,0,3
5690 clw : curs off : scroll off 
5700 under on 
5710 centre "sample-bank  creator"
5720 under off 
5730 restore 6880
5740 T=0 : read T$
5750 repeat 
5760 locate 0,T+2 : print T$
5770 read T$ : inc T
5780 until T$="QQQ"
5790 show on 
5800 repeat 
5810 V=val(inkey$)
5820 Y=(y mouse/16)-1 : M=mouse key
5830 until (V>0 and V<10) or (M=1 and Y>0 and Y<10)
5840 if M=1 then V=Y
5850 on V goto 5900,6030,6150,6250,6400,6650,6720,7010,7220
5860 end 
5870 rem
5880 rem> LOAD A SAMPLE <
5890 rem
5900 if NS>=MXSAM then boom : goto 5990
5910 F$=file select$("*.*","Load a sample",4)
5920 if F$="" then goto 5990
5930 open in #1,F$ : L=lof(#1) : close #1
5940 if L mod 2<>0 then inc L
5950 inc NS : loke start(10)+NS*8+6,H : loke start(10)+NS*8+10,L
5960 doke start(10)+4,NS
5970 bload F$,start(10)+H
5980 H=H+L
5990 goto 5690
6000 rem
6010 rem> SAVE A SAMPLE <
6020 rem
6030 if NS=-1 then boom : goto 6110
6040 clw : curs off 
6050 centre "save which sample?"
6060 gosub 6760
6070 F$=file select$("*.*","Save a sample",8)
6080 if F$="" then goto 6110
6090 OFS=leek(start(10)+CS*8+6) : SIZE=leek(start(10)+CS*8+10)
6100 bsave F$,start(10)+OFS to start(10)+OFS+SIZE
6110 goto 5690
6120 rem
6130 rem> LOAD A SAMPLE-BANK <
6140 rem
6150 F$=file select$("*.MBK","Load a sample-bank",4)
6160 if F$="" then goto 6210
6170 open in #1,F$ : L=lof(#1) : close #1
6180 if L>F then boom : goto 6210
6190 F$=F$+chr$(0) : R=dload(varptr(F$),start(10),18,L-18)
6200 NS=deek(start(10)+4) : H=leek(start(10)+6+NS*8)+leek(start(10)+6+NS*8+4)
6210 goto 5690
6220 rem
6230 rem> SAVE A SAMPLE-BANK <
6240 rem
6250 if NS=-1 then boom : goto 6360
6260 F$=file select$("*.MBK","Save a sample-bank",8)
6270 if F$="" then goto 6360
6280 L=dfree
6290 if L<H then boom : goto 6360
6300 doke start(10)+4,NS
6310 SIZE=leek(start(10)+6+NS*8)+leek(start(10)+6+NS*8+4)
6320 loke start(9)+14,SIZE : poke start(9)+14,129
6330 bsave F$,start(9) to start(9)+18
6340 F$=F$+chr$(0)
6350 R=dsave(varptr(F$),start(10),18,SIZE)
6360 goto 5690
6370 rem
6380 rem> ERASE A SAMPLE <
6390 rem
6400 if NS=-1 then boom : goto 6610
6410 clw : curs off 
6420 centre "erase which sample?"
6430 gosub 6760
6440 locate 0,8 : centre "sure (y/n)?"
6450 repeat : G$=upper$(inkey$) : until G$="Y" or G$="N"
6460 if G$="N" then goto 6610
6470 if CS<NS then goto 6500
6480 loke start(10)+6+NS*8,0 : loke start(10)+6+NS*8+4,0
6490 goto 6590
6500 S10=start(10) : S106=S10+6
6510 OFS=leek(S106+CS*8) : OFS2=leek(S106+CS*8+8) : OFS3=leek(S106+NS*8)
6520 OFS3=OFS3+leek(S106+NS*8+4)
6530 SIZE=leek(S106+CS*8+4)
6540 copy S10+OFS2,S10+OFS3 to S10+OFS
6550 copy S106+CS*8+8,S106+MXSAM*8+8 to S106+CS*8
6560 for T=CS to NS-2
6570 loke S106+T*8,leek(S106+T*8)-SIZE
6580 next T
6590 dec NS
6600 H=leek(S106+NS*8)+leek(S106+NS*8+4)
6610 goto 5690
6620 rem
6630 rem> ERASE BANK <
6640 rem
6650 clw : curs off 
6660 centre "sure (y/n)?"
6670 repeat : G$=upper$(inkey$) : until G$="Y" or G$="N"
6680 if G$="N" then goto 6700
6690 erase 10 : windel 1 : goto 5620
6700 goto 5690
6710 end 
6720 erase 10 : windel 1 : goto 20
6730 rem
6740 rem> CHOOSE NUMBER <
6750 rem
6760 if NS=-1 then return 
6770 locate 8,8 : print CS;" " : wait vbl : wait vbl : wait vbl 
6780 repeat 
6790 G$=inkey$ : M=mouse key
6800 until G$=" " or M=1 or M=2
6810 if G$=" " then return 
6820 if M=1 and CS>0 then dec CS
6830 if M=2 and CS<NS then inc CS
6840 goto 6770
6850 rem
6860 rem
6870 rem
6880 data "1......load a sample"
6890 data "2......save a sample"
6900 data "3........load a bank"
6910 data "4........save a bank"
6920 data "5....delete a sample"
6930 data "6.........clear bank"
6940 data "7...............exit"
6950 data "8......play a sample"
6960 data "9....(un)sign sample"
6970 data "QQQ"
6980 rem
6990 rem> PLAY A SAMPLE <
7000 rem
7010 if NS=-1 then boom : goto 5690
7020 clw : curs off 
7030 centre "play which sample?"
7040 gosub 6760
7050 locate 0,1 : centre "which frequency?"
7060 locate 8,8 : print FR;" " : wait vbl : wait vbl : wait vbl 
7070 repeat 
7080 G$=inkey$ : M=mouse key
7090 until G$=" " or M=1 or M=2
7100 if G$=" " then goto 7140
7110 if M=1 and FR>3 then dec FR
7120 if M=2 and FR<30 then inc FR
7130 goto 7060
7140 OFS=leek(start(10)+CS*8+6) : SIZE=leek(start(10)+CS*8+10)
7150 clear key 
7160 digi play 1,start(10),CS,FR,1
7170 clear key 
7180 repeat : until mouse key=1 or inkey$=" "
7190 clear key 
7200 digi play 0,start(10),CS,FR,1
7210 goto 5690
7220 rem>
7230 rem> (UN)SIGN SAMPLE <
7240 rem>
7250 if NS=-1 then boom : goto 5690
7260 clw : curs off 
7270 centre "change which sample?"
7280 gosub 6760
7290 OFS=leek(start(10)+CS*8+6) : SIZE=leek(start(10)+CS*8+10)
7300 samsign start(10)+OFS,SIZE
7310 goto 5690
7997 rem
7998 rem> .. SAVE PICTURE .. <
7999 rem
8000 F$=file select$("*.*","Save a picture (.NEO or .PI1)",8)
8010 if F$="" then goto 20
8015 if right$(F$,3)<>"NEO" and right$(F$,3)<>"PI1" then boom : goto 8000
8017 if dfree<33000 and dir first$(F$,-1)="" then boom : goto 8000
8020 hide on : screen copy 14 to back : screen copy 15 to physic : get palette (14) : wait vbl 
8030 save F$
8040 wipe physic : wipe back : goto 20
8097 rem
8098 rem> .. SAVE BOBS .. <
8099 rem
8100 TT$="Save the BOB data" : goto 9000
8197 rem
8198 rem> .. SAVE BOBS .. <
8199 rem
8200 TT$="Save the JOEY data" : goto 9000
8297 rem
8298 rem> .. SAVE W.BLOCKS .. <
8299 rem
8300 TT$="Save the WORLD blocks" : goto 9000
8397 rem
8398 rem> .. SAVE L.BLOCKS .. <
8399 rem
8400 TT$="Save the LANDSCAPE BLOCKS" : goto 9000
8497 rem
8498 rem> .. SAVE L.BLOCKS .. <
8499 rem
8500 if length(8)=0 then boom : goto 20
8510 if leek(start(8))=38964820 then WLD=true else WLD=false
8520 home : centre "Please wait..."
8525 if WLD then dreg(1)=1 else dreg(0)=0
8530 areg(0)=start(8) : dreg(1)=length(8)/2 : call 13
8535 if WLD then TT$="Save a LANDSCAPE" else TT$="Save a WORLD"
8540 F$=file select$("*.TNM",TT$,8)
8550 if F$="" then goto 20
8555 if right$(F$,3)<>"TNM" then boom : goto 8540
8560 if dir first$(F$,-1)="" and dfree<length(8) then boom : print : print "Out of disk space!" : wait 15 : goto 8535
8570 bsave F$,start(8) to start(8)+length(8)
8580 goto 20
8597 rem
8598 rem> .. SAVE TILES .. <
8599 rem
8600 TT$="Save the TILES" : goto 9000
8610 end 
8997 rem
8998 rem> .. MISC ".MBK" SAVE .. <
8999 rem
9000 if length(5)=0 then boom : goto 20
9010 F$=file select$("*.MBK",TT$,8)
9020 if F$="" then goto 20
9030 if right$(F$,3)<>"MBK" then boom : goto 9010
9040 if dir first$(F$,-1)="" and dfree<length(5) then boom : print "Out of disk space!" : wait 15 : goto 9010
9050 save F$,5
9060 goto 20

Reserved memory banks:
13:  program 0x000100
