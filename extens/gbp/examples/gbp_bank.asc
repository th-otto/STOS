10 rem ** GBP Databank Creation Accessory. Written by Neil Halliday 1993
20 rem **
30 rem ** All of this code is copyright GBP Software 1993, and may not be
40 rem ** copied/distributed without prior knowledge from GBP Software...
50 rem **
60 rem ** REMEMBER :- PIRACY IS THEFT, AND THEFT IS ILLEGAL!
70 rem ******************************************************************
80  : 
90 fade 3 : wait 4*7 : key off : curs off : show on : hide : DEL=false : if mode=0 then mode 1
100  : 
110 on error goto 730
120  : 
130 rem ** Menu bit
140 pen 1 : centre "GBP databank creator accessory V1.0" : cdown : cdown
150 centre "Written by Neil Halliday.. 1994 (c) GBP SOFTWARE" : cdown : cdown : cdown : print 
160 print "Press LEFT mousekey to start.. Pressing the left shift key on this menu will"
170 print "signal to the program to delete included files after databank creation.. " : print 
180 print "Pressing [RETURN] or entering a blank filename on the fileselector will signify"
190 print "the end of the file list, allowing the program to continue with the creation of"
200 print "the databank file."
210 print : print "Press Right Shift key to exit..."
220 print : print : print "Free memory :";free;" Bytes"
230 wait 3*7 : fade 3,$0,$777 : wait 3*7
240  : 
250 rem ** Get key input
260 repeat : X=special key(-1) : if btst(1,X) then if DEL=false then DEL=true : wait 5 : else DEL=false : wait 5
270 if btst(0,X) then fade 3 : wait 4*3 : default : end 
280 locate 0,23 : print "File delete : "; : if DEL=false then print "OFF" : else print "ON "
290 wait vbl : until mouse key=1
300  : 
310 rem ** Dimension an array to hold the filenames & Sizes of each file
320 cls : dim NAME$(999),FSIZE(999)
330  : 
340 rem ** NUMFILES is the variable that holds the number of files in the bank
350 NUMFILES=0
360  : 
370 rem ** Find file information about each file
380 show on : repeat : F$=file select$("*.*","Choose file to to GBP databank  Blank filename continues.",1)
390 if F$<>"" then inc NUMFILES : NAME$(NUMFILES)=F$ : open in #1,F$ : FSIZE(NUMFILES)=lof(#1) : close #1 : if not(even(FSIZE(NUMFILES))) then inc FSIZE(NUMFILES)
400 if F$<>"" then print "FILE";NUMFILES;" = ";NAME$(NUMFILES);"  ";FSIZE(NUMFILES);" Bytes"
410 until F$="" : print 
420  : 
430 rem ** Create an empty bank, for data storage
440 SIZE=2 : SIZE=SIZE+(8*NUMFILES) : for LP=1 to NUMFILES : SIZE=SIZE+FSIZE(LP) : next LP : reserve as work 10,SIZE : print "TOTAL GBP BANK SIZE =";SIZE
450  : 
460 rem ** Copy number of files to bank
470 MEM=start(10) : doke MEM,NUMFILES : MEM=MEM+2
480  : 
490 rem ** Copy filesize data to bank
500 for LP=1 to NUMFILES : loke MEM,FSIZE(LP) : MEM=MEM+4 : loke MEM,0 : MEM=MEM+4 : next LP : print 
510  : 
520 rem ** Copy offset data to bank
530 ST10=start(10) : rem // Find actual bank start
540 OFSET=2 : OFSET=OFSET+(8*NUMFILES) : rem // Find copy address
550  : 
560 for LP=1 to NUMFILES : loke ((start(10)+2)+(8*LP))-4,OFSET : bload NAME$(LP),start(10)+OFSET
570 print "FILE";LP;" OFFSET =";OFSET : OFSET=OFSET+FSIZE(LP)
580 next LP
590  : 
600 rem ** Save newly created bank
610 F$=file select$("*.GBP","Save GBP Databank file",1)
620 if F$="" then goto 670 : else print : print "SAVING.." : bsave F$,start(10) to start(10)+SIZE
630  : 
640 rem ** If DEL is selected, then delete all the databank files
650 if DEL then print : print "DELETING OLD FILES.." : for LP=1 to NUMFILES : kill NAME$(LP) : next LP
660  : 
670 rem ** Jump to end
680 goto 700
690  : 
700 rem ** Ending bit
710 default : end 
720  : 
730 rem ** Error trapping routine
740 cls : boom : print "Error";errn;" has occurred.. Please consult your STOS manual for more details..."
750 wait 500 : goto 710
