10 rem  **********************************************************************
20 rem  *                                                                    *
30 rem  *   A cookie demonstration program for STOS on the ST(e)/TT/Falcon   *
40 rem  *                                                                    *
50 rem  *             Original       :   12/11/1997                          *
60 rem  *             Last edited    :   02/04/1998                          *
70 rem  *                                                                    *
80 rem  *           ½ 1997, 1998 Anthony Hoskin.                             *
90 rem  *                        45 Wythburn Rd,                             *
100 rem *                        Newbold,                                    *
110 rem *                        Chesterfield,                               *
120 rem *                        Derbyshire,                                 *
130 rem *                        S41 8DP  (U.K.)                             *
140 rem *                                                                    *
150 rem *   IMPORTANT: This program will only run when the following         *
160 rem *              extension(s) and/or patch file(s) are installed.      *
170 rem *                                                                    *
180 rem *   ST(e)/TT/Falcon 030 System Control v0.9 ½ Anthony Hoskin         *
190 rem *                                                                    *
200 rem **********************************************************************
210  : 
220 auto back off : on error goto 1730
230  : 
240 rem ~~~~~ If running on a Falcon 030 set CPU to highspeed ~~~~~~~~~~~~
250  : 
260 FALCON=$30000 : if cookie("_MCH")<>FALCON then goto 310
270 _cpucache on : _cpuspeed 16 : _blitterspeed 16 : _falconbus 
280  : 
290 rem ~~~~~~~~~~~~~~~~~ Initialise Screen mode ~~~~~~~~~~~~~~~~~~~~~~~~~
300  : 
310 key off : rem Turn off the STOS editor window.
320 hide on : rem HIDE the STOS mouse.
330 curs off : rem Turn of the flashing cursor.
340 if mode<2 then mode 1 : rem Use ST-Med rez if not running Mono monitor.
350  : 
360 dim SOUND$(4)
370 restore 1630
380 for L=0 to 4
390  : read SOUND$(L)
400 next L
410  : 
420 rem ~~~~~~~~~~~~~~~ Initialise screen display ~~~~~~~~~~~~~~~~~~~~~~~~
430  : 
440 windopen 1,0,0,80,25,1 : curs off 
450 title " S Y S T E M  C O O K I E S " : cdown
460  : 
470 P_COOKIE=cookieptr
480 if P_COOKIE<>0 then goto 530
490 print " Sorry, this machine doesn't appear to have a Cookie Jar installed."
500 print " It is assumed therefore the machine features the following..."
510 print : goto 540
520  : 
530 centre "Features found on the current machine..." : print : print 
540 print " Cookie ID$   Cookie Value             Meaning" : cdown
550  : 
560 gosub 780 : rem Determine Machine cookie data.
570 gosub 920 : rem Determine CPU cookie data.
580 gosub 1010 : rem Determine Video cookie data.
590 gosub 1150 : rem Determine Sound system cookie data.
600 gosub 1270 : rem Determine Floppy drive cookie data.
610  : 
620 rem ~~~~~~~~~~~~~~~ Main activity loop ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
630  : 
640 cdown : cdown : centre "Press ESC or click mouse key to exit."
650 while (mouse key<>2) and (inkey$<>chr$(27))
660 wend 
670  : 
680 rem ~~~~~~~~~~~~~~~ Terminate program tidily ~~~~~~~~~~~~~~~~~~~~~~~~~
690  : 
700 if cookie("_MCH")<>FALCON then goto 720
710 _cpuspeed 8 : _blitterspeed 8
720 default : clear key : end 
730  : 
740 rem ==================================================================
750 rem Determine Machine cookie data.
760 rem ==================================================================
770  : 
780 restore 1420
790 MCH=cookie("_MCH")
800 for LOOP=0 to 5
810  : read TYPE,MACHINE$
820  : if TYPE=MCH then goto 840
830 next LOOP
840 print using " '_MCH'       ~~~~~~~~~     ";hex$(MCH,8);
850 print "Machine      - "+MACHINE$
860 return 
870  : 
880 rem ==================================================================
890 rem Determine CPU cookie data.
900 rem ==================================================================
910  : 
920 CPU=cookie("_CPU")
930 print using " '_CPU'           #####     ";CPU;
940 print "CPU          - Motorola"+str$(CPU)+"."
950 return 
960  : 
970 rem ==================================================================
980 rem Determine Video cookie data.
990 rem ==================================================================
1000  : 
1010 restore 1530
1020 VDO=cookie("_VDO")
1030 for LOOP=0 to 4
1040  : read TYPE,VIDEO$
1050  : if TYPE=VDO then goto 1070
1060 next LOOP
1070 print using " '_VDO'       ~~~~~~~~~     ";hex$(VDO,8);
1080 print "Video system - "+VIDEO$
1090 return 
1100  : 
1110 rem ==================================================================
1120 rem Determine Sound system cookie data.
1130 rem ==================================================================
1140  : 
1150 SND=cookie("_SND")
1160 print using " '_SND'       ~~~~~~~~~     ";hex$(SND,8);
1170 print "Sound system - "+SOUND$(0)
1180 for BIT=1 to 4
1190  : if btst(BIT,SND)=true then print space$(43)+SOUND$(BIT)
1200 next BIT
1210 return 
1220  : 
1230 rem ==================================================================
1240 rem Determine Floppy drive cookie data.
1250 rem ==================================================================
1260  : 
1270 FDC=cookie("_FDC")
1280 FLOPPY_TYPE=(FDC and $FF000000) : rol .l 8,FLOPPY_TYPE
1290 print using " '_FDC'       ~~~~~~~~~     ";hex$(FDC,8);
1300 print "Floppy drive - ";
1310 if (FDC and $FFFFFF)=$415443 then B$=" ['ATC']." else B$="."
1320 if FLOPPY_TYPE=0 then print "360/720kb double density"+B$
1330 if FLOPPY_TYPE=1 then print "1.44mb high density"+B$
1340 if FLOPPY_TYPE=2 then print "2.88mb quad density"+B$
1350 if (FLOPPY_TYPE<0) or (FLOPPY_TYPE>2) then print "Unknown drive."
1360 return 
1370  : 
1380 rem ==================================================================
1390 rem Machine cookie data.
1400 rem ==================================================================
1410  : 
1420 data $0,"520/1040 ST/Mega ST."
1430 data $10000,"STe."
1440 data $10010,"MegaSTe."
1450 data $20000,"TT 030."
1460 data $30000,"Falcon 030."
1470 data $60000,"Unknown machine."
1480  : 
1490 rem ==================================================================
1500 rem Video cookie data.
1510 rem ==================================================================
1520  : 
1530 data $0,"Standard ST shifter."
1540 data $10000,"Improved STe shifter."
1550 data $20000,"TT 030 Graphics shifter."
1560 data $30000,"Falcon 030 Videl chip."
1570 data $60000,"Unknown machine."
1580  : 
1590 rem ==================================================================
1600 rem Sound system info.
1610 rem ==================================================================
1620  : 
1630 data "YM2149 GI sound chip [ST]."
1640 data "8-bit DMA sound playback [STe]."
1650 data "16-bit DMA sound record/playback."
1660 data "16-bit CODEC & connection matrix."
1670 data "DSP56001 Digital Signal Processor."
1680  : 
1690 rem ==================================================================
1700 rem General purpose error handler.
1710 rem ==================================================================
1720  : 
1730 on error goto 0
1740 physic=default physic : logic=default logic : back=default back
1750 break on : if mode<2 then mode 1
1760 print "Error #"+str$(errn)-" "; : print " at line #"+str$(errl)-" "
1770 print : print "Press any key to Quit."
1780 wait key : resume 700
1790 end 
